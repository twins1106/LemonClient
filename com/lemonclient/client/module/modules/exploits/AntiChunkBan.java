//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\user\πŸ≈¡ »≠∏È\map"!

//Decompiled by Procyon!

package com.lemonclient.client.module.modules.exploits;

import com.lemonclient.client.module.*;
import com.lemonclient.api.setting.values.*;
import com.lemonclient.api.event.events.*;
import me.zero.alpine.listener.*;
import java.util.*;
import java.util.function.*;
import com.lemonclient.api.util.misc.*;
import net.minecraft.client.*;
import net.minecraft.network.play.client.*;
import net.minecraft.network.*;
import net.minecraft.client.gui.*;
import net.minecraft.network.play.server.*;

@Module.Declaration(name = "AntiChunkBan", category = Category.Exploits)
public class AntiChunkBan extends Module
{
    private static long startTime;
    ModeSetting modeThing;
    IntegerSetting delayTime;
    BooleanSetting disable;
    @EventHandler
    Listener<PacketEvent.Receive> receiveListener;
    
    public AntiChunkBan() {
        this.modeThing = this.registerMode("Mode", (List)Arrays.asList("Packet", "Kill", "Both"), "Packet");
        this.delayTime = this.registerInteger("Kill Delay", 10, 0, 100);
        this.disable = this.registerBoolean("Disable After Kill", false);
        this.receiveListener = (Listener<PacketEvent.Receive>)new Listener(event -> {
            if (((String)this.modeThing.getValue()).equals("Packet") || ((String)this.modeThing.getValue()).equals("Both")) {
                if (AntiChunkBan.mc.player == null) {
                    return;
                }
                if (event.getPacket() instanceof SPacketChunkData) {
                    event.cancel();
                }
            }
        }, new Predicate[0]);
    }
    
    public void onEnable() {
        if (AntiChunkBan.mc.player == null) {
            return;
        }
        MessageBus.sendClientPrefixMessage("[AntiChunkBan] Note: this disables chunks loading in. If you want to be able to play normally you have to disable it");
    }
    
    public void onUpdate() {
        if (AntiChunkBan.mc.player == null) {
            return;
        }
        if ((((String)this.modeThing.getValue()).equals("Kill") || ((String)this.modeThing.getValue()).equals("Both")) && Minecraft.getMinecraft().getCurrentServerData() != null) {
            if (AntiChunkBan.startTime == 0L) {
                AntiChunkBan.startTime = System.currentTimeMillis();
            }
            if (AntiChunkBan.startTime + (int)this.delayTime.getValue() <= System.currentTimeMillis()) {
                if (Minecraft.getMinecraft().getCurrentServerData() != null) {
                    Minecraft.getMinecraft().playerController.connection.sendPacket((Packet)new CPacketChatMessage("/kill"));
                }
                if (AntiChunkBan.mc.player.getHealth() <= 0.0f) {
                    AntiChunkBan.mc.player.respawnPlayer();
                    AntiChunkBan.mc.displayGuiScreen((GuiScreen)null);
                    if (this.disable.getValue()) {
                        this.disable();
                    }
                }
                AntiChunkBan.startTime = System.currentTimeMillis();
            }
        }
    }
    
    static {
        AntiChunkBan.startTime = 0L;
    }
}
